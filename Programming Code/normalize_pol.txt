#include <unordered_map>
using namespace std;

// typedef struct Item* ptr;

// struct Item

// {

//     double coef; // coefficient

//     int exp; // exponent

//     ptr next;

// }

void normalizePolynomial(ptr& first){
    unordered_map<int, double> pairs;
    ptr tmp = first;
    while (tmp != nullptr)
    {
        pairs[tmp->exp] += tmp->coef;
        tmp = tmp->next;
    }
    
    // for (auto pair : pairs)
    //     cout << pair.first << " " << pair.second << endl;

    tmp = nullptr;
    for (auto pair : pairs)
    {
        if (pair.second)
        {
            ptr newNode = new Item;
            newNode->coef = pair.second;
            newNode->exp  = pair.first;
            newNode->next = tmp;
            tmp = newNode;
        }
    }
    ptr trash = first;
    first = tmp;

    while (trash != nullptr)
    {
        ptr temp = trash;
        trash = trash->next;
        delete temp;
    }
} 