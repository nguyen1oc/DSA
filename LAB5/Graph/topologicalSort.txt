void topologicalSortUtil(int v, bool visited[], list<int>& Stack) { 
        visited[v] = true; 
        for (int i=0; i != adj[v].getSize(); ++i) 
        if (!visited[adj[v].getElement(i)]) 
            topologicalSortUtil(adj[v].getElement(i), visited, Stack); 
        Stack.push_back(v); 
    } 
    void topologicalSort() { 
        list<int> Stack; 
        bool* visited = new bool[V]; 
        for (int i = 0; i < V; i++) 
            visited[i] = false; 
        for (int i = 0; i < V; i++) 
            if (visited[i] == false) 
                topologicalSortUtil(i, visited, Stack); 
        while (Stack.empty() == false) { 
            cout << Stack.back() << " "; 
            Stack.pop_back(); 
        } 
    }  